# main build

name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Prepare build (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev mesa-common-dev libgl1-mesa-dev ninja-build -qyy
          mkdir -p build/cmake
      - name: Prepare build (windows-latest)
        if: matrix.os == 'windows-latest'
        run: |
          choco install ninja
          mkdir build\cmake
      - name: configure
        run: cmake ../.. -DCMAKE_BUILD_TYPE=Release -G Ninja
        working-directory: build/cmake
      - name: build
        run: cmake --build . --config Release
        working-directory: build/cmake
